{"version":3,"sources":["Components/WelcomePage.jsx","Components/Constant/NavigationBar.jsx","Components/Constant/Footer.jsx","Components/Routes/Home.jsx","Components/Users/LoginForm.jsx","Components/Routes/Login.jsx","Components/PostEvent/PostEventForm.jsx","Components/Routes/PostEvent.jsx","Components/SearchEvent/Searchbox.jsx","Components/Routes/SearchEvent.jsx","Components/Routes/MyProfile.jsx","Components/Users/SignupForm.jsx","Components/Routes/Signup.jsx","App/App.js","serviceWorker.js","index.js"],"names":["WelcomePage","state","react_default","a","createElement","className","Component","NavigationBar","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","userId","updateUser","bind","assertThisInitialized","console","log","setState","react_router_dom","to","onClick","Footer","Home","Constant_NavigationBar","Components_WelcomePage","Constant_Footer","LoginForm","username","password","human","updateUsername","updatePassword","updateHuman","postLogin","event","target","value","Form","Field","Input","placeholder","onChange","Checkbox","label","Button","type","color","Login","Users_LoginForm","PostEventform","Title","Date","Organizer","OrganizerContactInfo","Location","Tags","Introduction","ExternalLink","CoverPic","tempTags","updateTitle","updateDate","updateOrganizer","updateOrganizerInfo","updateLocation","updateTags","updateIntroduction","updateExternalLink","updateCoverPic","postEvent","id","push","required","Group","PostEvent","PostEventForm","Searchbox","DateFrom","DateEnd","updateDateFrom","updateDateEnd","postSearch","feelLucky","SearchEvent_Searchbox","MyProfile","SignupForm","firstName","lastName","email","confirmPassword","securityQuestion","securityQuestionAnswer","profilePic","updateFirstName","updateLastName","updateEmail","updateConfirmPassword","updateSecurityQuestion","updateSecurityQuestionAnswer","updateProfilePic","postSignup","text","axios","post","then","res","catch","err","Signup","Users_SignupForm","App","react_router","exact","path","component","SearchEvent","Boolean","window","location","hostname","match","ReactDOM","render","src_App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.95c1157e.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport '../Styles/WelcomePage.css'\r\n\r\n\r\nclass WelcomePage extends Component {\r\n    state = {  }\r\n    render() { \r\n        return (\r\n                <div className = \"welcomepage_body\">\r\n                    <h1 className = \"welcomepage_header\">Welcome to MAGIC</h1>\r\n                    <p className = \"welcomepage_para\"> This is a place where you can post events and find one.</p>\r\n                    <p className = \"welcomepage_para\">Make the most use of college time to have fun! </p>\r\n                </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default WelcomePage;","import React, { Component } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport '../../Styles/NavigationBar.css';\r\n\r\n\r\nclass NavigationBar extends Component {\r\n\r\n    constructor(){\r\n        super();\r\n\r\n        this.state = {\r\n            userId: -1\r\n        }\r\n\r\n        this.updateUser = this.updateUser.bind(this);\r\n    }\r\n\r\n    updateUser(){\r\n        console.log(\"user clicked\")\r\n        this.setState({\r\n            userId: 0\r\n        })\r\n    }\r\n    render() { \r\n        return ( \r\n            <div>\r\n                <header className = \"navigationbar\">\r\n                    <nav className = \"navigationbar_body\">\r\n                        <div className = \"nagivationbar_logo\">\r\n                            <Link to='/myprofile' onClick={this.updateUser}>\r\n                                <p>My Profile</p>\r\n                            </Link>\r\n                        </div>\r\n                        <div className= \" nagivationbar_spacer\"></div>\r\n                        <div className = \"navigationbar_items\">\r\n                            <ul>\r\n                                <li>\r\n                                    <Link to='/postevent'>\r\n                                        <p>Posting Events</p>\r\n                                    </Link>\r\n                                </li>\r\n                                <li>\r\n                                    <Link to='/findevent'>\r\n                                        <p>Searching Events</p>\r\n                                    </Link>\r\n                                </li>\r\n                                <li>\r\n                                    <Link to='/login'>\r\n                                        <p>Login </p>\r\n                                    </Link>\r\n                                </li>\r\n                                <li>\r\n                                    <Link to='/signup'>\r\n                                        <p>Signup</p>\r\n                                    </Link>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </nav>\r\n                </header>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default NavigationBar;","import React, { Component } from 'react';\r\nimport \"../../Styles/Footer.css\"\r\nimport 'semantic-ui-css/semantic.min.css';\r\n\r\nclass Footer extends Component {\r\n    state = {  }\r\n    render() { \r\n        return (\r\n            <div className = \"footer_body\">\r\n                <footer className = \"footer_footer\">\r\n                    <p className=\"footer_text\">Made By MAGIC Contact us: magic@gmail.com</p>\r\n                </footer>\r\n            </div>\r\n          );\r\n    }\r\n}\r\n \r\nexport default Footer;","import React, { Component } from 'react';\r\n\r\nimport WelcomePage from '../WelcomePage';\r\nimport NavigationBar from '../Constant/NavigationBar';\r\nimport Footer from '../Constant/Footer';\r\n\r\n\r\nclass Home extends Component {\r\n\r\n    render() { \r\n        return (\r\n            <div>\r\n                <NavigationBar/>\r\n                <WelcomePage />\r\n                <Footer />\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Home;","import React, { Component } from 'react';\r\nimport {Input, Button, Checkbox, Form} from 'semantic-ui-react'\r\nimport \"../../Styles/LoginForm.css\"\r\nimport 'semantic-ui-css/semantic.min.css';\r\nclass LoginForm extends Component {\r\n    constructor(){\r\n        super()\r\n\r\n        this.state = {\r\n            username:\"\",\r\n            password: \"\",\r\n            human:false\r\n        }\r\n\r\n        this.updateUsername = this.updateUsername.bind(this)\r\n        this.updatePassword = this.updatePassword.bind(this)\r\n        this.updateHuman  = this.updateHuman.bind(this)\r\n        this.postLogin = this.postLogin.bind(this);\r\n    }\r\n\r\n    updateUsername(event){\r\n        console.log(event.target.value)\r\n        this.setState({\r\n            username : event.target.value\r\n        })\r\n    }\r\n\r\n    updatePassword(event){\r\n        console.log(event.target.value)\r\n        this.setState({\r\n            password:event.target.value\r\n        })\r\n    }\r\n\r\n    updateHuman(event){\r\n        console.log(event.target.value)\r\n        if(this.state.human === false) {\r\n            this.setState({\r\n                human:true\r\n            })\r\n        }else{\r\n            this.setState({\r\n                human:false\r\n            })\r\n        }\r\n    }\r\n    postLogin(event){\r\n        // connect with db and based on result, direct to login or failed\r\n        console.log(this.state.username)\r\n        console.log(this.state.password)\r\n        console.log(this.state.human)\r\n    }\r\n    render() {\r\n        return (\r\n            <div className = \"loginform_body\">\r\n                <h1>User Login</h1>\r\n                <Form className = \"loginform_form\">\r\n                    <Form.Field className = \"loginform_field\">\r\n                        <label>Login Email</label>\r\n                        <Input placeholder = 'email' onChange={this.updateUsername}/>\r\n                    </Form.Field>\r\n                    <Form.Field className = \"loginform_field\">\r\n                        <label> Password </label>\r\n                        <Input placeholder = 'password' onChange = {this.updatePassword}/>\r\n                    </Form.Field>\r\n                    <Form.Field className = \"loginform_field\">\r\n                        <Checkbox label = 'Verify I am human' onChange = {this.updateHuman}/>\r\n                    </Form.Field>\r\n                    <Button className=\"loginform_btn\" type = 'submit' color = 'yellow' onClick = {this.postLogin}> Login </Button>\r\n                </Form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n//for login btn pressed, it should take the input and verfiy with the database\r\nexport default LoginForm;\r\n","import React, { Component } from 'react';\r\n\r\nimport LoginForm from '../Users/LoginForm';\r\nimport NavigationBar from '../Constant/NavigationBar';\r\nimport Footer from '../Constant/Footer';\r\n\r\n\r\nclass Login extends Component {\r\n    state = {  }\r\n    render() { \r\n        return ( \r\n            <div>\r\n                <NavigationBar />\r\n                <LoginForm />\r\n                <Footer />\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Login;","import React, { Component } from 'react';\r\nimport {Form, Input, Button} from 'semantic-ui-react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport '../../Styles/PostEventform.css'\r\n\r\n\r\nclass PostEventform extends Component {\r\n    constructor(){\r\n        super();\r\n\r\n        this.state={\r\n            Title: \"\",\r\n            Date: \"\",\r\n            Organizer: \"\",\r\n            OrganizerContactInfo: \"\",\r\n            Location: \"\",\r\n            Tags: [],\r\n            Introduction: \"\",\r\n            ExternalLink: \"\",\r\n            CoverPic: -1\r\n        }\r\n\r\n        this.tempTags = [];\r\n        this.updateTitle = this.updateTitle.bind(this);\r\n        this.updateDate = this.updateDate.bind(this);\r\n        this.updateOrganizer = this.updateOrganizer.bind(this);\r\n        this.updateOrganizerInfo= this.updateOrganizerInfo.bind(this);\r\n        this.updateLocation = this.updateLocation.bind(this);\r\n        this.updateTags = this.updateTags.bind(this);\r\n        this.updateIntroduction = this.updateIntroduction.bind(this);\r\n        this.updateExternalLink = this.updateExternalLink.bind(this);\r\n        this.updateCoverPic = this.updateCoverPic.bind(this);\r\n        this.postEvent = this.postEvent.bind(this);\r\n    }\r\n\r\n    updateOrganizerInfo(event){\r\n        console.log(event.target.value)\r\n        this.setState({\r\n            OrganizerContactInfo:event.target.value\r\n        })\r\n    }\r\n\r\n    updateCoverPic(event){\r\n        console.log(event.target.id)\r\n        this.setState({\r\n            CoverPic:event.target.id\r\n        })\r\n    }\r\n\r\n    updateExternalLink(event){\r\n        console.log(event.target.value)\r\n        this.setState({\r\n            ExternalLink:event.target.value\r\n        })\r\n    }\r\n\r\n    updateIntroduction(event){\r\n        console.log(event.target.value)\r\n        this.setState({\r\n            Introduction:event.target.value\r\n        })\r\n    }\r\n\r\n    updateTags(event){\r\n        console.log(event.target.id)\r\n        this.tempTags.push(event.target.id)\r\n        console.log(this.tempTags)\r\n    }\r\n\r\n    updateLocation(event){\r\n        console.log(event.target.value)\r\n        this.setState({\r\n            Location:event.target.value\r\n        })\r\n    }\r\n\r\n    updateTitle(event){\r\n        console.log(event.target.value);\r\n        this.setState({\r\n            Title: event.target.value\r\n        })\r\n    }\r\n\r\n    updateDate(event){\r\n        console.log(event.target.value);\r\n        this.setState({\r\n            Date: event.target.value\r\n        })\r\n    }\r\n\r\n    updateOrganizer(event){\r\n        console.log(event.target.value)\r\n        this.setState({\r\n            Organizer:event.target.value\r\n        })\r\n    }\r\n\r\n    postEvent(event){\r\n        // here need to call the db\r\n        // based on db's response, direct to another page\r\n        this.setState({\r\n            Tags:this.tempTags\r\n        })\r\n        console.log(this.state.Title)\r\n        console.log(this.state.Date)\r\n        console.log(this.state.Organizer)\r\n        console.log(this.state.OrganizerContactInfo)\r\n        console.log(this.state.Tags)\r\n        console.log(this.tempTags)\r\n        console.log(this.state.Location)\r\n        console.log(this.state.Introduction)\r\n        console.log(this.state.ExternalLink)\r\n        console.log(this.state.CoverPic)\r\n    }\r\n    render() { \r\n        const options = [\r\n            {key : 1, text : 'choice 1', value : 1},\r\n            {key : 2, text : 'choice 2', value :2 }\r\n        ]\r\n        return ( \r\n            <div className = \"posteventform_body\">\r\n                <h1>Posting an event</h1>\r\n                <Form>\r\n                    <Form.Field required>\r\n                        <label>Title</label>\r\n                        <Input placeholder = 'Event Title' onChange = {this.updateTitle}/>\r\n                    </Form.Field>\r\n                    <Form.Field required>\r\n                        <label>Date</label>\r\n                        <Input placeholder = \"yyyy-MM-dd\" onChange = {this.updateDate}/>\r\n                    </Form.Field>\r\n                    <Form.Field required>\r\n                        <label>Organizer</label>\r\n                        <Input placeholder = \"\" onChange = {this.updateOrganizer}/>\r\n                    </Form.Field>\r\n                    <Form.Field>\r\n                        <label>Organizer Contact Information</label>\r\n                        <Input placeholder = \"\" onChange = {this.updateOrganizerInfo}/>\r\n                    </Form.Field>\r\n                    <Form.Field required>\r\n                        <label>Location</label>\r\n                        <Input placeholder = \"\" onChange = {this.updateLocation}/>\r\n                    </Form.Field>\r\n                    <Form.Field required>\r\n                        <label> Tags (Pick Multiple)</label>\r\n                        <Button.Group>\r\n                            <Button id = \"academic\" onClick = {this.updateTags}>Academic</Button>\r\n                            <Button id = \"chill\" onClick = {this.updateTags}>Chill</Button>\r\n                            <Button id = \"sport\" onClick = {this.updateTags}>Sport</Button>\r\n                            <Button id = \"movie\" onClick = {this.updateTags}> Movie</Button>\r\n                            <Button id = \"food\" onClick = {this.updateTags}>Food</Button>\r\n                            <Button id = \"outside\" onClick = {this.updateTags}>Outside</Button>\r\n                            <Button id = \"meetup\" onClick = {this.updateTags}>Meetup</Button>\r\n                            <Button id = \"adventure\" onClick = {this.updateTags}>Adventure</Button>\r\n                            <Button id = \"thought\" onClick = {this.updateTags}>Thought</Button>\r\n                            <Button id = \"reading\" onClick = {this.updateTags}>Reading</Button>\r\n                            <Button id = \"party\" onClick = {this.updateTags}>Party</Button>\r\n                        </Button.Group>\r\n                    </Form.Field>\r\n                    <Form.Field required>\r\n                        <label>Introduction</label>\r\n                        <Input placeholder = 'this event is about' onChange = {this.updateIntroduction}/>\r\n                    </Form.Field>\r\n                    <Form.Field>\r\n                        <label>External Links related to the event </label>\r\n                        <Input onChange = {this.updateExternalLink}/>\r\n                    </Form.Field>\r\n                    <Form.Field>\r\n                        <label> Cover Photo (Pick One) </label>\r\n                        <Button.Group>\r\n                            <Button id = \"default\" onClick = {this.updateCoverPic}>Default-Group</Button>\r\n                            <Button id = \"nature\" onClick = {this.updateCoverPic}>Nature</Button>\r\n                            <Button id = \"party\" onClick = {this.updateCoverPic}>Party</Button>\r\n                            <Button id =\"school\" onClick = {this.updateCoverPic}>School</Button>\r\n                        </Button.Group>\r\n                    </Form.Field>\r\n                    <Button color = 'yellow' type = 'submit' onClick = {this.postEvent}>Post</Button>\r\n                </Form>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default PostEventform;","import React, { Component } from 'react';\r\nimport PostEventform from '../PostEvent/PostEventForm';\r\nimport NavigationBar from '../Constant/NavigationBar';\r\nimport Footer from '../Constant/Footer';\r\n\r\n\r\nclass PostEvent extends Component {\r\n    state = {  }\r\n    render() { \r\n        return ( \r\n            <div>\r\n                <NavigationBar/>\r\n                <PostEventform/>\r\n                <Footer />\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default PostEvent;","import React, { Component } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport '../../Styles/Searchbox.css';\r\nimport {Form, Input, Button} from 'semantic-ui-react';\r\n\r\nclass Searchbox extends Component {\r\n    constructor(){\r\n        super();\r\n\r\n        this.state = {\r\n            Title:\"\",\r\n            Organizer:\"\",\r\n            DateFrom:\"\",\r\n            DateEnd:\"\",\r\n            Tags:[]\r\n        }\r\n\r\n        this.tempTags = []\r\n        this.updateTitle = this.updateTitle.bind(this)\r\n        this.updateOrganizer = this.updateOrganizer.bind(this)\r\n        this.updateDateFrom = this.updateDateFrom.bind(this)\r\n        this.updateDateEnd = this.updateDateEnd.bind(this)\r\n        this.updateTags = this.updateTags.bind(this)\r\n        this.postSearch = this.postSearch.bind(this)\r\n        this.feelLucky = this.feelLucky.bind(this)\r\n    }\r\n\r\n    updateOrganizer(event){\r\n        console.log(event.target.value)\r\n        this.setState({\r\n            Organizer:event.target.value\r\n        })\r\n    }\r\n    updateTags(event){\r\n        console.log(event.target.id)\r\n        this.tempTags.push(event.target.id)\r\n    }\r\n\r\n    updateDateFrom(event){\r\n        console.log(event.target.value)\r\n        this.setState({\r\n            DateFrom:event.target.value\r\n        })\r\n    }\r\n    updateDateEnd(event){\r\n        console.log(event.target.value)\r\n        this.setState({\r\n            DateEnd:event.target.value\r\n        })\r\n    }\r\n\r\n    updateTitle(event){\r\n        console.log(event.target.value)\r\n        this.setState({\r\n            Title:event.target.value\r\n        })\r\n    }\r\n    postSearch(event){\r\n        console.log(this.state.Title)\r\n        console.log(this.state.Organizer)\r\n        console.log(this.state.DateFrom)\r\n        console.log(this.state.DateEnd)\r\n        console.log(this.tempTags)\r\n    }\r\n    feelLucky(event){\r\n        console.log(\"update with top 10 events\")\r\n    }\r\n    render() { \r\n        return (\r\n            <div className=\"searchevent_body\">\r\n                <h1>Search Events</h1>\r\n                <Form>\r\n                    <Form.Field>\r\n                        <label>Event Title</label>\r\n                        <Input placeholder=\"\" onChange = {this.updateTitle}/>\r\n                    </Form.Field>\r\n                    <Form.Field>\r\n                        <label>Organizing Parties</label>\r\n                        <Input placeholder = \"\" onChange = {this.updateOrganizer}/>\r\n                    </Form.Field>\r\n                    <Form.Field>\r\n                        <label>Events Date Range</label>\r\n                            <Form.Field>\r\n                                <label>From:</label>\r\n                                <Input placeholder = \"yyyy-MM-dd\" onChange = {this.updateDateFrom}/>\r\n                            </Form.Field>\r\n                            <Form.Field>\r\n                                <label>To:</label>\r\n                                <Input placeholder = \"yyyy-MM-dd\" onChange = {this.updateDateEnd}/>\r\n                            </Form.Field>\r\n                    </Form.Field>\r\n                    <Form.Field>\r\n                        <label>Event tags</label>\r\n                        <Button.Group>\r\n                            <Button id = \"academic\" onClick = {this.updateTags}>Academic</Button>\r\n                            <Button id = \"chill\" onClick = {this.updateTags}>Chill</Button>\r\n                            <Button id = \"sport\" onClick = {this.updateTags}>Sport</Button>\r\n                            <Button id = \"movie\" onClick = {this.updateTags}> Movie</Button>\r\n                            <Button id = \"food\" onClick = {this.updateTags}>Food</Button>\r\n                            <Button id = \"outside\" onClick = {this.updateTags}>Outside</Button>\r\n                            <Button id = \"meetup\" onClick = {this.updateTags}>Meetup</Button>\r\n                            <Button id = \"adventure\" onClick = {this.updateTags}>Adventure</Button>\r\n                            <Button id = \"thought\" onClick = {this.updateTags}>Thought</Button>\r\n                            <Button id = \"reading\" onClick = {this.updateTags}>Reading</Button>\r\n                            <Button id = \"party\" onClick = {this.updateTags}>Party</Button>\r\n                        </Button.Group>\r\n                    </Form.Field>\r\n                    <Button color = 'yellow' type = 'submit' onClick = {this.postSearch}>Search</Button>\r\n                    <Button color = 'yellow' type = 'submit' onClick = {this.feelLucky}>I'm Feeling Lucky</Button>\r\n                </Form>\r\n            </div>\r\n\r\n          );\r\n    }\r\n}\r\n \r\nexport default Searchbox;","import React, { Component } from 'react';\r\nimport Searchbox from '../SearchEvent/Searchbox';\r\nimport NavigationBar from '../Constant/NavigationBar';\r\nimport Footer from '../Constant/Footer';\r\n\r\nclass PostEvent extends Component {\r\n    state = {  }\r\n    render() { \r\n        return ( \r\n            <div>\r\n                <NavigationBar/>\r\n                <Searchbox/>\r\n                <Footer />\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default PostEvent;","import React, { Component } from 'react';\r\n\r\nimport Footer from '../Constant/Footer';\r\nimport NavigationBar from '../Constant/NavigationBar';\r\n\r\n\r\nclass MyProfile extends Component {\r\n    state = {  }\r\n    render() { \r\n        return ( \r\n            <div className = \"myprofile_body\">\r\n                <NavigationBar />\r\n                // need a profile thing with all details of users\r\n                <Footer/>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default MyProfile;","import React, { Component } from 'react';\r\nimport {Form, Input, Button} from 'semantic-ui-react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport '../../Styles/Signupform.css'\r\nimport axios from 'axios';\r\nclass SignupForm extends Component {\r\n    constructor(){\r\n        super()\r\n\r\n        this.state = {\r\n            firstName:\"\",\r\n            lastName:\"\",\r\n            email:\"\",\r\n            password:\"\",\r\n            confirmPassword:\"\",\r\n            securityQuestion:\"\",\r\n            securityQuestionAnswer:\"\",\r\n            profilePic:-1\r\n        }\r\n\r\n        this.updateFirstName = this.updateFirstName.bind(this)\r\n        this.updateLastName = this.updateLastName.bind(this)\r\n        this.updateEmail = this.updateEmail.bind(this)\r\n        this.updatePassword = this.updatePassword.bind(this)\r\n        this.updateConfirmPassword = this.updateConfirmPassword.bind(this)\r\n        this.updateSecurityQuestion = this.updateSecurityQuestion.bind(this)\r\n        this.updateSecurityQuestionAnswer = this.updateSecurityQuestionAnswer.bind(this)\r\n        this.updateProfilePic  = this.updateProfilePic.bind(this)\r\n        this.postSignup = this.postSignup.bind(this)\r\n    }\r\n\r\n    updateSecurityQuestionAnswer(event){\r\n        console.log(event.target.value)\r\n        this.setState({\r\n            securityQuestionAnswer:event.target.value\r\n        })\r\n    }\r\n\r\n    updateSecurityQuestion(event){\r\n        console.log(event.target.id)\r\n        this.setState({\r\n            securityQuestion:event.target.text\r\n        })\r\n    }\r\n\r\n    updateConfirmPassword(event){\r\n        console.log(event.target.value)\r\n        this.setState({\r\n            confirmPassword:event.target.value\r\n        })\r\n    }\r\n\r\n    updatePassword(event){\r\n        console.log(event.target.value)\r\n        this.setState({\r\n            password:event.target.value\r\n        })\r\n    }\r\n\r\n    updateLastName(event){\r\n        console.log(event.target.value)\r\n        this.setState({\r\n            lastName:event.target.value\r\n        })\r\n    }\r\n\r\n    updateFirstName(event){\r\n        console.log(event.target.value)\r\n        this.setState({\r\n            firstName:event.target.value\r\n        })\r\n    }\r\n\r\n    updateProfilePic(event){\r\n        console.log(event.target.id)\r\n        this.setState({\r\n            profilePic:event.target.id\r\n        })\r\n    }\r\n\r\n    updateEmail(event){\r\n        console.log(event.target.value)\r\n        this.setState({\r\n            email:event.target.value\r\n        })\r\n    }\r\n\r\n    postSignup(event){\r\n        console.log(this.state.firstName)\r\n        console.log(this.state.lastName)\r\n        console.log(this.state.email)\r\n        console.log(this.state.password)\r\n        console.log(this.state.confirmPassword)\r\n        console.log(this.state.securityQuestion)\r\n        console.log(this.state.securityQuestionAnswer)\r\n        console.log(this.state.profilePic)\r\n\r\n        axios.post('https://cors-anywhere.herokuapp.com/https://localhost:4000/users', this.state)\r\n          .then(res => {\r\n            console.log(res)\r\n          })\r\n          .catch(err => {\r\n            console.log(err)\r\n          })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className = \"signupform_body\">\r\n                <h1>Sign up! </h1>\r\n                <Form>\r\n                    <Form.Field required>\r\n                        <label>First Name</label>\r\n                        <Input placeholder = \"\" onChange = {this.updateFirstName}/>\r\n                    </Form.Field>\r\n                    <Form.Field required>\r\n                        <label>Last Name</label>\r\n                        <Input placeholder = \"\" onChange = {this.updateLastName}/>\r\n                    </Form.Field>\r\n                    <Form.Field required>\r\n                        <label>Email</label>\r\n                        <Input placeholder = \"\" onChange = {this.updateEmail}/>\r\n                    </Form.Field>\r\n                    <Form.Field required>\r\n                        <label>Password</label>\r\n                        <Input placeholder = \"\" onChange = {this.updatePassword}/>\r\n                    </Form.Field>\r\n                    <Form.Field required>\r\n                        <label>Confirm password</label>\r\n                        <Input placeholder = \"\" onChange = {this.updateConfirmPassword}/>\r\n                    </Form.Field>\r\n                    <Form.Field required>\r\n                        <label>Security Question</label>\r\n                            <Button.Group>\r\n                                <Button id  = \"birthplace\" text = \"What city were you born in?\" onClick = {this.updateSecurityQuestion}>\"What city were you born in?\"</Button>\r\n                                <Button id  = \"favcolor\" text = \"What is your favorite color?\" onClick = {this.updateSecurityQuestion}>\"What is your favorite color?\"</Button>\r\n                                <Button id  = \"petname\" text = \"What is the name of your first pet?\" onClick = {this.updateSecurityQuestion}>\"What is the name of your first pet?\"</Button>\r\n                                <Button id  = \"vacationspot\" text = \"Where is your dream vacation located?\" onClick = {this.updateSecurityQuestion}>\"Where is your dream vacation located?\"</Button>\r\n                            </Button.Group>\r\n                    </Form.Field>\r\n                    <Form.Field required>\r\n                        <label>Security Question Answer</label>\r\n                        <Input placeholder = \"\" onChange = {this.updateSecurityQuestionAnswer}/>\r\n                    </Form.Field>\r\n                    <Form.Field>\r\n                        <label> Profile Pic</label>\r\n                        <Button.Group>\r\n                            <Button id = \"female\" text = \"Female\" onClick = {this.updateProfilePic}>Female</Button>\r\n                            <Button id=\"male\" text = \"Male\" onClick = {this.updateProfilePic}>Male</Button>\r\n                            <Button id = \"neutural\" text = \"Neutural\" onClick = {this.updateProfilePic}>Neutural</Button>\r\n                        </Button.Group>\r\n                    </Form.Field>\r\n                    <Button type = 'submit' color = 'yellow' onClick = {this.postSignup}> Create</Button>\r\n                </Form>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n\r\nexport default SignupForm;\r\n","import React, { Component } from 'react';\r\n\r\nimport SignupForm from '../Users/SignupForm';\r\nimport NavigationBar from '../Constant/NavigationBar';\r\nimport Footer from '../Constant/Footer';\r\n\r\n\r\nclass Signup extends Component {\r\n    state = {  }\r\n    render() { \r\n        return ( \r\n            <div>\r\n                <NavigationBar />\r\n                <SignupForm />\r\n                <Footer />\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Signup;","import React,{Component} from 'react';\r\n//import 'semantic-ui-css/semantic.min.css';\r\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\r\nimport Home from '../Components/Routes/Home'\r\nimport Login from '../Components/Routes/Login'\r\nimport PostEvent from '../Components/Routes/PostEvent'\r\nimport SearchEvent from '../Components/Routes/SearchEvent';\r\nimport MyProfile from '../Components/Routes/MyProfile';\r\nimport Signup from '../Components/Routes/Signup';\r\nimport '../Styles/App.css'\r\n\r\nclass App extends Component {\r\n  render(){\r\n    return (\r\n      <Router>\r\n        <Switch>\r\n          <Route exact path = '/' component = {Home}/>\r\n          <Route exact path = '/postevent' component = {PostEvent}/>\r\n          <Route exact path = '/findevent' component = {SearchEvent}/>\r\n          <Route exact path = '/login' component = {Login} />\r\n          <Route exact path = '/signup' component = {Signup} />\r\n          <Route exact path = '/myprofile' component = {MyProfile}/>\r\n        </Switch>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nserviceWorker.unregister();"],"sourceRoot":""}