{"version":3,"sources":["images/Nature.jpg","images/Party.jpg","images/School.JPG","images/Academics.jpg","images/Chill.jpg","images/Sport.jpg","images/Graduation.jpg","Components/WelcomePage.jsx","Components/Constant/NavigationBar.jsx","Components/Constant/Footer.jsx","Components/Routes/Home.jsx","Components/Users/LoginForm.jsx","Components/Routes/Login.jsx","Components/PostEvent/PostEventForm.jsx","Components/Routes/PostEvent.jsx","Components/SearchEvent/Searchbox.jsx","Components/Routes/SearchEvent.jsx","Components/SearchEvent/EventList.jsx","Components/Users/Profile.jsx","Components/Routes/MyProfile.jsx","Components/Users/SignupForm.jsx","Components/Routes/Signup.jsx","App/App.js","serviceWorker.js","index.js","images/Default-Group.jpg"],"names":["module","exports","__webpack_require__","p","WelcomePage","state","react_default","a","createElement","className","Component","NavigationBar","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","userId","updateUser","bind","assertThisInitialized","console","log","setState","react_router_dom","to","onClick","Icon","Group","size","name","color","Footer","Home","Constant_NavigationBar","Components_WelcomePage","Constant_Footer","LoginForm","username","password","human","posted","successPosted","updateUsername","updatePassword","updateHuman","postLogin","resetLogin","event","target","value","_this2","alert","getEmail","getPassword","axios","get","then","res","data","catch","err","response","Form","Field","Input","placeholder","onChange","Checkbox","label","Button","type","Login","Users_LoginForm","imageList","img1","img2","img3","img4","img5","img6","img7","img8","PostEventform","createCustomizedTagGroup","group","i","NewTag","CustomTags","push","style","display","deleteCustomTag","updateCustomTag","key","updateNewTag","addCustomTag","Title","Date","Organizer","OrganizerContactInfo","Location","Tags","Introduction","ExternalLink","CoverPic","tempTags","updateTitle","updateDate","updateOrganizer","updateOrganizerInfo","updateLocation","updateTags","updateIntroduction","updateExternalLink","postEvent","onPick","image","classList","contains","splice","indexOf","remove","add","currentTarget","getAttribute","concat","filter","_","defaultValue","map","new_event","tags","title","email","date","creator","address","introduction","coverpicture","post","required","es","selected","inline","showTimeSelect","timeFormat","timeIntervals","dateFormat","timeCaption","vakue","dist_default","images","src","resetPost","PostEvent","PostEventForm","options","text","Searchbox","now","organizer","dateFrom","dateEnd","getTime","currentValues","searched","updateDateFrom","updateDateEnd","handleAddition","postSearch","feelLucky","v","toLowerCase","toConsumableArray","_ref","child","limit","where","$gt","$lt","$regex","$options","length","$all","JSON","stringify","params","events","Dropdown","search","selection","fluid","multiple","allowAdditions","onAddItem","eventComponents","e","_id","resetSearch","SearchEvent_Searchbox","EventList","results","obj","hasOwnProperty","isEmpty","props","Card","Image","Content","Header","Meta","Description","Profile","SearchEvent_EventList","MyProfile","Users_Profile","SignupForm","firstName","lastName","confirmPassword","securityQuestion","securityQuestionAnswer","profilePic","updateFirstName","updateLastName","updateEmail","updateConfirmPassword","updateSecurityQuestion","updateSecurityQuestionAnswer","updateProfilePic","postSignup","prevValue","questionButtons","document","getElementById","childNodes","id","new_user","createdevents","savedevents","securityquestion","securityanswer","resetSignup","Signup","Users_SignupForm","App","react_router","exact","path","component","SearchEvent","Boolean","window","location","hostname","match","ReactDOM","render","src_App_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6fc876df.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Nature.41be5e79.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Party.a89f8e52.jpg\";","module.exports = __webpack_public_path__ + \"static/media/School.183a02cc.JPG\";","module.exports = __webpack_public_path__ + \"static/media/Academics.0801811e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Chill.d1301561.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Sport.aa863001.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Graduation.71b6e611.jpg\";","import React, {Component} from 'react';\nimport '../Styles/WelcomePage.css'\n\n\nclass WelcomePage extends Component {\n    state = {  }\n    render() { \n        return (\n                <div className = \"welcomepage_body\">\n                    <h1 className = \"welcomepage_header\">Welcome to MAGIC</h1>\n                    <p className = \"welcomepage_para\"> This is a place where you can post events and find one.</p>\n                    <p className = \"welcomepage_para\">Make the most use of college time to have fun! </p>\n                </div>\n        );\n    }\n}\n \nexport default WelcomePage;","import React, { Component } from 'react';\nimport {Link} from 'react-router-dom';\nimport '../../Styles/NavigationBar.css';\nimport { Icon } from 'semantic-ui-react';\n\n\nclass NavigationBar extends Component {\n\n    constructor(){\n        super();\n\n        this.state = {\n            userId: -1\n        }\n\n        this.updateUser = this.updateUser.bind(this);\n    }\n\n    updateUser(){\n        console.log(\"user clicked\")\n        this.setState({\n            userId: 0\n        })\n    }\n    render() {\n        return (\n            <div>\n                <header className = \"navigationbar\">\n                    <nav className = \"navigationbar_body\">\n                        <div className = \"navigationbar_items\">\n                            <ul>\n                                <li>\n                                    <Link to='/'>\n                                        <p> Home</p>\n                                    </Link>\n                                </li>\n                                <li>\n                                    <Link to='/myprofile' onClick={this.updateUser}>\n                                        <p>My Profile</p>\n                                    </Link>\n\n                                </li>\n                                <Icon.Group size='small'>\n                                  <Icon size='big' name='circle outline' color='orange'/>\n                                  <Icon name='user' color='orange'/>\n                                </Icon.Group>\n                            </ul>\n                        </div>\n                        <div className= \" nagivationbar_spacer\"></div>\n                        <div className = \"navigationbar_items\">\n                            <ul>\n                                <li>\n                                    <Link to='/postevent'>\n                                        <p>Posting Events</p>\n                                    </Link>\n                                </li>\n                                <li>\n                                    <Link to='/findevent'>\n                                        <p>Searching Events</p>\n                                    </Link>\n                                </li>\n                                <li>\n                                    <Link to='/login'>\n                                        <p>Login </p>\n                                    </Link>\n                                </li>\n                                <li>\n                                    <Link to='/signup'>\n                                        <p>Signup</p>\n                                    </Link>\n                                </li>\n                            </ul>\n                        </div>\n                    </nav>\n                </header>\n            </div>\n         );\n    }\n}\n\nexport default NavigationBar;\n","import React, { Component } from 'react';\nimport \"../../Styles/Footer.css\"\nimport 'semantic-ui-css/semantic.min.css';\n\nclass Footer extends Component {\n    state = {  }\n    render() { \n        return (\n            <div className = \"footer_body\">\n                <footer className = \"footer_footer\">\n                    <p className=\"footer_text\">Made By MAGICS Contact us: magics@gmail.com</p>\n                </footer>\n            </div>\n          );\n    }\n}\n \nexport default Footer;","import React, { Component } from 'react';\n\nimport WelcomePage from '../WelcomePage';\nimport NavigationBar from '../Constant/NavigationBar';\nimport Footer from '../Constant/Footer';\n\n\nclass Home extends Component {\n\n    render() { \n        return (\n            <div>\n                <NavigationBar/>\n                <WelcomePage />\n                <Footer />\n            </div>\n         );\n    }\n}\n \nexport default Home;","import React, { Component } from 'react';\nimport {Input, Button, Checkbox, Form} from 'semantic-ui-react'\nimport {Link} from 'react-router-dom'\nimport \"../../Styles/LoginForm.css\"\nimport 'semantic-ui-css/semantic.min.css';\nimport axios from 'axios';\n\n\n\nclass LoginForm extends Component {\n    constructor(){\n        super()\n\n        this.state = {\n            username:\"\",\n            password: \"\",\n            human:false,\n            posted: false,\n            successPosted:false\n        }\n\n        this.updateUsername = this.updateUsername.bind(this)\n        this.updatePassword = this.updatePassword.bind(this)\n        this.updateHuman  = this.updateHuman.bind(this)\n        this.postLogin = this.postLogin.bind(this);\n        this.resetLogin = this.resetLogin.bind(this)\n    }\n\n    resetLogin(event){\n        this.setState({\n            username:\"\",\n            password: \"\",\n            human:false,\n            posted: false,\n            successPosted:false\n        })\n    }\n\n    updateUsername(event){\n        console.log(event.target.value)\n        this.setState({\n            username : event.target.value\n        })\n    }\n\n    updatePassword(event){\n        console.log(event.target.value)\n        this.setState({\n            password:event.target.value\n        })\n    }\n\n    updateHuman(event){\n        console.log(event.target.value)\n        if(this.state.human === false) {\n            this.setState({\n                human:true\n            })\n        }else{\n            this.setState({\n                human:false\n            })\n        }\n    }\n    postLogin(event){\n        // connect with db and based on result, direct to login or failed\n        console.log(this.state.username)\n        console.log(this.state.password)\n        console.log(this.state.human)\n        if(this.state.human === false){\n          alert(\"please verify you are a human.\")\n        }\n        var getEmail = this.state.username;\n        var getPassword = this.state.password;\n\n        axios.get('http://localhost:4000/api/users/' + getEmail + '/password/' + getPassword)\n          .then(res => {\n            console.log(res.data);\n            console.log(\"successPosted\");\n            this.setState({\n                posted : true,\n                successPosted:true\n            })\n          })\n          .catch(err => {\n            console.log(err.response)\n            this.setState({\n                posted: true,\n                successPosted:false\n            })\n          })\n\n        // after connect to the api,\n        // if returned error :\n        /*\n             this.setState({\n                 posted:true,\n                 successPosted: false\n\n            })\n        */\n       //if successfully login :\n       /*\n            this.setState({\n                posted:true,\n                successPosted:true\n            })\n       */\n    }\n    render() {\n\n      if(this.state.posted === false){\n        return (\n            <div className = \"loginform_body\">\n                <h1>User Login</h1>\n                <Form className = \"loginform_form\">\n                    <Form.Field className = \"loginform_field\">\n                        <label>Login Email</label>\n                        <Input placeholder = 'email' onChange={this.updateUsername}/>\n                    </Form.Field>\n                    <Form.Field className = \"loginform_field\">\n                        <label> Password </label>\n                        <Input placeholder = 'password' onChange = {this.updatePassword}/>\n                    </Form.Field>\n                    <Form.Field className = \"loginform_field\">\n                        <Checkbox label = 'Verify I am human' onChange = {this.updateHuman}/>\n                    </Form.Field>\n                    <Button className=\"loginform_btn\" type = 'submit' color = 'yellow' onClick = {this.postLogin}> Login </Button>\n                </Form>\n            </div>\n        );\n    }else{\n        if(this.state.successPosted === true){\n            return (\n                <div className = \"loginform_body\">\n                    <h1>Successfully Logged In! </h1>\n                    <h1>Hello Welcome Back {this.state.username}</h1>\n                    <Link to='/'>\n                        Back To Home To Explore.\n                    </Link>\n                </div>\n            )\n        }else{\n            return(\n                <div className = \"loginform_body\">\n                    <h1>Failed Logged In! </h1>\n                    <h3>Check your email or password to try again </h3>\n                    <Link to='/login' onClick = {this.resetLogin}>\n                        Back To Login.\n                    </Link>\n                </div>\n            )\n            }\n    }\n    }\n}\n\n//for login btn pressed, it should take the input and verfiy with the database\nexport default LoginForm;\n","import React, { Component } from 'react';\n\nimport LoginForm from '../Users/LoginForm';\nimport NavigationBar from '../Constant/NavigationBar';\nimport Footer from '../Constant/Footer';\n\n\nclass Login extends Component {\n    state = {  }\n    render() { \n        return ( \n            <div>\n                <NavigationBar />\n                <LoginForm />\n                <Footer />\n            </div>\n         );\n    }\n}\n \nexport default Login;","import React, { Component } from 'react';\nimport {Form, Input, Button} from 'semantic-ui-react';\nimport 'semantic-ui-css/semantic.min.css';\nimport '../../Styles/PostEventform.css'\nimport {Link} from 'react-router-dom'\nimport axios from 'axios';\nimport ImagePicker from 'react-image-picker';\nimport DatePicker from 'react-datepicker';\nimport 'react-image-picker/dist/index.css';\n\n//import images from local\nimport img1 from './../../images/Default-Group.jpg';\nimport img2 from './../../images/Nature.jpg';\nimport img3 from './../../images/Party.jpg';\nimport img4 from './../../images/School.JPG';\nimport img5 from './../../images/Academics.jpg';\nimport img6 from './../../images/Chill.jpg';\nimport img7 from './../../images/Sport.jpg';\nimport img8 from './../../images/Graduation.jpg';\n\nconst imageList = [img1, img2, img3, img4, img5, img6, img7, img8];\n\n\nclass PostEventform extends Component {\n    constructor(){\n        super();\n\n        this.state={\n            Title: \"\",\n            NewTag: \"\",\n            Date: new Date(),\n            Organizer: \"\",\n            OrganizerContactInfo: \"\",\n            Location: \"\",\n            Tags: [],\n            CustomTags:[],\n            Introduction: \"\",\n            ExternalLink: \"\",\n            CoverPic: null,\n            successPosted: false,\n            posted:false\n        }\n\n        this.tempTags = [];\n        this.updateTitle = this.updateTitle.bind(this);\n        this.updateDate = this.updateDate.bind(this);\n        this.updateOrganizer = this.updateOrganizer.bind(this);\n        this.updateOrganizerInfo= this.updateOrganizerInfo.bind(this);\n        this.updateLocation = this.updateLocation.bind(this);\n        this.updateTags = this.updateTags.bind(this);\n        this.updateIntroduction = this.updateIntroduction.bind(this);\n        this.updateExternalLink = this.updateExternalLink.bind(this);\n        this.postEvent = this.postEvent.bind(this);\n\n        this.onPick = this.onPick.bind(this);\n\n        this.addCustomTag = this.addCustomTag.bind(this);\n        this.updateCustomTag = this.updateCustomTag.bind(this);\n        this.deleteCustomTag = this.deleteCustomTag.bind(this);\n        this.updateNewTag = this.updateNewTag.bind(this);\n    }\n\n    onPick(image) {\n      console.log(image);\n      this.setState({\n        CoverPic:image\n      })\n    }\n\n    resetPost(event){\n        this.setState({\n            Title: \"\",\n            Date: \"\",\n            Organizer: \"\",\n            OrganizerContactInfo: \"\",\n            Location: \"\",\n            Tags: [],\n            Introduction: \"\",\n            ExternalLink: \"\",\n            CoverPic: -1,\n            successPosted: false,\n            posted:false\n        })\n    }\n\n    updateOrganizerInfo(event){\n        console.log(event.target.value)\n        this.setState({\n            OrganizerContactInfo:event.target.value\n        })\n    }\n\n    updateExternalLink(event){\n        console.log(event.target.value)\n        this.setState({\n            ExternalLink:event.target.value\n        })\n    }\n\n    updateIntroduction(event){\n        console.log(event.target.value)\n        this.setState({\n            Introduction:event.target.value\n        })\n    }\n\n    updateTags(event){\n        if(!event.target.classList.contains(\"active\")){//check whether active button\n            console.log(\"add:\",event.target.value)\n            this.tempTags.push(event.target.value)\n            console.log(this.tempTags)\n            event.target.classList.add(\"active\");\n        }else{\n            console.log(\"remove:\",event.target.value)\n            this.tempTags.splice(this.tempTags.indexOf(event.target.value),1);\n            console.log(this.tempTags)\n            event.target.classList.remove(\"active\");\n        }\n\n    }\n\n    updateLocation(event){\n        console.log(event.target.value)\n        this.setState({\n            Location:event.target.value\n        })\n    }\n\n    updateTitle(event){\n        console.log(event.target.value);\n        this.setState({\n            Title: event.target.value\n        })\n    }\n\n    updateDate(event){\n        console.log(event);\n        this.setState({\n            Date: event\n        })\n    }\n\n    updateOrganizer(event){\n        console.log(event.target.value)\n        this.setState({\n            Organizer:event.target.value\n        })\n    }\n\n        addCustomTag(event){\n        if(event.currentTarget.getAttribute(\"value\")!==''){\n            console.log(\"Add NewTag:\",event.currentTarget.getAttribute(\"value\"));\n            this.setState({CustomTags:this.state.CustomTags.concat([event.currentTarget.getAttribute(\"value\")]),NewTag:\"\"});\n        }\n    }\n\n    updateNewTag(event){\n        console.log(\"Update NewTag:\",event.target.value);\n        this.setState({NewTag:event.target.value});\n    }\n\n    deleteCustomTag(event){\n        console.log(\"Delete CustomTag:\",event.currentTarget.getAttribute(\"value\"));\n        //console.log(\"Delete Index:\",this.state.CustomTags.indexOf(event.currentTarget.getAttribute(\"value\")));\n        this.setState({CustomTags:this.state.CustomTags.filter((value,_) => value !== event.currentTarget.getAttribute(\"value\"))});\n    }\n\n    updateCustomTag(event){\n        console.log(\"OldValue:\",event.target.defaultValue);\n        this.setState({CustomTags:this.state.CustomTags.map((value,_) => value === event.target.defaultValue?event.target.value:value)});\n    }\n\n    createCustomizedTagGroup = () => {\n        let group = []\n        console.log(\"Render NewTag:\",this.state.NewTag);\n        console.log(\"Custom Tags:\",this.state.CustomTags);\n        //console.log(\"Temp Custom Tags:\",this.tempCustomTags);\n        for (var i in this.state.CustomTags){\n            group.push(\n                <div className=\"ui right labeled icon input\"  style={{display:'inline'}}>\n                    <i className=\"minus square link icon\" value = {this.state.CustomTags[i]} onClick = {this.deleteCustomTag}></i>\n                    <input type=\"text\" value={this.state.CustomTags[i]} onChange = {this.updateCustomTag}/>\n                </div>\n            );\n        }\n\n        group.push(\n            <div className=\"ui right labeled left icon input\" key={\"\"} style={{display:'inline'}}>\n              <i className=\"tags icon\"></i>\n              <input type=\"text\" value= {this.state.NewTag} onChange = {this.updateNewTag}/>\n              <a className=\"ui tag label\" value = {this.state.NewTag} onClick = {this.addCustomTag}>\n                Add Tag\n              </a>\n            </div>\n        );\n        console.log(group);\n        return group;\n    }\n\n    postEvent(event){\n        // here need to call the db\n        // based on db's response, direct to another page\n        this.setState({\n            Tags:this.tempTags\n        })\n        console.log(this.state.Title)\n        console.log(this.state.Date)\n        console.log(this.state.Organizer)\n        console.log(this.state.OrganizerContactInfo)\n        console.log(this.state.Tags)\n        console.log(this.tempTags)\n        console.log(this.state.Location)\n        console.log(this.state.Introduction)\n        console.log(this.state.ExternalLink)\n        console.log(this.state.CoverPic)\n\n        var new_event = {\n          tags: this.tempTags.concat(this.state.CustomTags),\n          title: this.state.Title,\n          email: this.state.OrganizerContactInfo,\n          date: this.state.Date,\n          creator: this.state.Organizer,\n          address: this.state.Location,\n          introduction: this.state.Introduction,\n          coverpicture: this.state.CoverPic,\n        }\n\n        axios.post('http://localhost:4000/api/events', new_event)\n          .then(res => {\n            console.log(res.data)\n            this.setState({\n                posted : true,\n                successPosted:true\n            })\n          })\n          .catch(err => {\n            console.log(err.response)\n            this.setState({\n                posted: true,\n                successPosted:false\n            })\n          })\n    }\n    render() {\n        if(this.state.posted === false){\n            return (\n                <div className = \"posteventform_body\">\n                <h1>Posting an event</h1>\n                <Form>\n                    <Form.Field required>\n                        <label>Title</label>\n                        <Input placeholder = 'Event Title' onChange = {this.updateTitle}/>\n                    </Form.Field>\n                    <Form.Field required>\n                        <label>Date</label>\n                        <DatePicker\n                            selected={this.state.Date}\n                            onChange={this.updateDate}\n                            inline\n                            showTimeSelect\n                            timeFormat=\"HH:mm\"\n                            timeIntervals={30}\n                            dateFormat=\"MMMM d, yyyy h:mm aa\"\n                            timeCaption=\"time\"\n                        />\n                    </Form.Field>\n                    <Form.Field required>\n                        <label>Organizer</label>\n                        <Input placeholder = \"\" onChange = {this.updateOrganizer}/>\n                    </Form.Field>\n                    <Form.Field>\n                        <label>Organizer Email</label>\n                        <Input placeholder = \"\" onChange = {this.updateOrganizerInfo}/>\n                    </Form.Field>\n                    <Form.Field required>\n                        <label>Location</label>\n                        <Input placeholder = \"\" onChange = {this.updateLocation}/>\n                    </Form.Field>\n                    <Form.Field required>\n                        <label> Tags (Pick Multiple)</label>\n                        <Button.Group>\n                            <Button value = \"academic\" onClick = {this.updateTags} >Academic</Button>\n                            <Button value = \"chill\" onClick = {this.updateTags}>Chill</Button>\n                            <Button value = \"sport\" onClick = {this.updateTags}>Sport</Button>\n                            <Button vakue = \"movie\" onClick = {this.updateTags}> Movie</Button>\n                            <Button value = \"food\" onClick = {this.updateTags}>Food</Button>\n                            <Button value = \"outside\" onClick = {this.updateTags}>Outside</Button>\n                            <Button value = \"meetup\" onClick = {this.updateTags}>Meetup</Button>\n                            <Button value = \"adventure\" onClick = {this.updateTags}>Adventure</Button>\n                            <Button value = \"thought\" onClick = {this.updateTags}>Thought</Button>\n                            <Button value = \"reading\" onClick = {this.updateTags}>Reading</Button>\n                            <Button value = \"party\" onClick = {this.updateTags}>Party</Button>\n                        </Button.Group>\n                        <div>\n                            {this.createCustomizedTagGroup()}\n                        </div>\n                    </Form.Field>\n                    <Form.Field required>\n                        <label>Introduction</label>\n                        <Input placeholder = 'this event is about' onChange = {this.updateIntroduction}/>\n                    </Form.Field>\n                    <Form.Field>\n                        <label>External Links related to the event </label>\n                        <Input onChange = {this.updateExternalLink}/>\n                    </Form.Field>\n                    <Form.Field>\n                        <label> Cover Photo </label>\n                        <ImagePicker\n                          images={imageList.map((image, i) => ({src: image, value: i}))}\n                          onPick={this.onPick}\n                        />\n                    </Form.Field>\n                    <Button color = 'yellow' type = 'submit' onClick = {this.postEvent}>Post</Button>\n                </Form>\n            </div>\n         );\n        }else{\n            if(this.state.successPosted === true){\n                return (\n                    <div className = \"posteventresponse_body\">\n                        <h1> Successfully posted! </h1>\n                        <h3> Check your event in your profile</h3>\n                        <Link to ='/myprofile'>\n                            My profile\n                        </Link>\n                        <h3> Or check out other events! </h3>\n                        <Link to ='/'>\n                            Back To Home\n                        </Link>\n                    </div>\n                )\n            }else{\n                return(\n                    <div className=\"posteventresponse_body\">\n                        <h1> Failed to Post Event</h1>\n                        <h3> Make sure that you are logged in to your account before posting event!</h3>\n                        <Link to='/login'>Login To Post</Link>\n                        <h3> If you don't have an account, sign up to post event! </h3>\n                        <Link to ='/signup'>Sign Up</Link>\n                        <h3> If you already logged in, please make sure all required fields are filled up and try again</h3>\n                        <Link to='/postevent' onClick = {this.resetPost}>Back To Post Again</Link>\n                    </div>\n                )\n            }\n        }\n    }\n}\n\nexport default PostEventform;\n","import React, { Component } from 'react';\nimport PostEventform from '../PostEvent/PostEventForm';\nimport NavigationBar from '../Constant/NavigationBar';\nimport Footer from '../Constant/Footer';\n\n\nclass PostEvent extends Component {\n    state = {  }\n    render() { \n        return ( \n            <div>\n                <NavigationBar/>\n                <PostEventform/>\n                <Footer />\n            </div>\n         );\n    }\n}\n \nexport default PostEvent;","import React, { Component } from 'react';\nimport 'semantic-ui-css/semantic.min.css';\nimport '../../Styles/Searchbox.css';\nimport {Link} from 'react-router-dom'\nimport {Form, Input, Button, Dropdown} from 'semantic-ui-react';\nimport DatePicker from 'react-datepicker';\nimport axios from 'axios';\n\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nconst options = [\n  { key: 'academic', text: 'Academic', value: 'academic' },\n  { key: 'chill', text: 'Chill', value: 'chill' },\n  { key: 'sport', text: 'Sport', value: 'sport' },\n  { key: 'movie', text: 'Movie', value: 'movie' },\n  { key: 'food', text: 'Food', value: 'food' },\n  { key: 'outside', text: 'Outside', value: 'outside' },\n  { key: 'meetup', text: 'Meetup', value: 'meetup' },\n  { key: 'adventure', text: 'Adventure', value: 'adventure' },\n  { key: 'thought', text: 'Thought', value: 'thought' },\n  { key: 'reading', text: 'Reading', value: 'reading' },\n  { key: 'party', text: 'Party', value: 'party' }\n]\n\nclass Searchbox extends Component {\n    constructor(){\n        super();\n\n        var now = new Date();\n\n        this.state = {\n            options: options,\n            title:\"\",\n            organizer:\"\",\n            dateFrom: now,\n            dateEnd: new Date(now.getTime() + 608800000), // Default to a week from today\n            currentValues:[],\n            searched: false\n        }\n\n        this.tempTags = []\n        this.updateTitle = this.updateTitle.bind(this)\n        this.updateOrganizer = this.updateOrganizer.bind(this)\n        this.updateDateFrom = this.updateDateFrom.bind(this)\n        this.updateDateEnd = this.updateDateEnd.bind(this)\n        this.updateTags = this.updateTags.bind(this)\n        this.handleAddition = this.handleAddition.bind(this)\n        this.postSearch = this.postSearch.bind(this)\n        this.feelLucky = this.feelLucky.bind(this)\n    }\n\n    resetSearch(event){\n        var now = new Date();\n        this.setState({\n            title:\"\",\n            organizer:\"\",\n            dateFrom: now,\n            dateEnd: new Date(now.getTime() + 608800000),\n            tags:[],\n            searched : false\n        })\n    }\n\n    updateOrganizer(event){\n        // console.log(event.target.value)\n        this.setState({\n            organizer:event.target.value\n        })\n    }\n\n    handleAddition(event, v) {\n      console.log(event);\n      console.log(v.value);\n      if (v) {\n        console.log(v.value);\n        this.setState({\n          options: [{text: v.value, value: v.value.toLowerCase(), key: v.value.toLowerCase()}, ...this.state.options]\n        })\n      }\n    }\n    updateTags(event, {value}) {\n        console.log(value);\n        this.setState({ currentValues: value })\n    }\n\n    updateDateFrom(event){\n        console.log(event)\n        this.setState({\n            dateFrom:event\n        })\n    }\n    updateDateEnd(event){\n        console.log(event)\n        this.setState({\n            dateEnd:event\n        })\n    }\n\n    updateTitle(event){\n        // console.log(event.target.value)\n        this.setState({\n            title:event.target.value\n        })\n    }\n    postSearch(event, child, limit){\n        console.log(this.state);\n        var where = {\n            \"date\": { \"$gt\": this.state.dateFrom, \"$lt\": this.state.dateEnd },\n        };\n        if (this.state.title) {\n          where[\"title\"] = { \"$regex\": '.*' + this.state.title + '.*', \"$options\": 'si'}\n        };\n        if (this.state.organizer) {\n          where[\"creator\"] = { \"$regex\": '.*' + this.state.organizer + '.*', \"$options\": 'si'}\n        };\n        if (this.state.currentValues.length) {\n          where[\"tags\"] = { \"$all\": this.state.currentValues }\n        };\n        console.log(JSON.stringify(where));\n        console.log(limit);\n        axios.get('http://localhost:4000/api/events', {\n          params: {\n            where: JSON.stringify(where),\n            limit: limit ? limit : 0\n          }\n        })\n          .then(res => this.setState({\n            events: res.data.data,\n            searched: true\n          }, () => console.log(this.state.events)))\n          .catch(err => {\n            console.log(err.response)\n          })\n    }\n\n    feelLucky(event, child){\n        this.postSearch(event, child, 1);\n    }\n\n    render() {\n        if(this.state.searched === false){\n        const { currentValues } = this.state\n        return (\n            <div className=\"searchevent_body\">\n                <h1>Search Events</h1>\n                <Form>\n                    <Form.Field>\n                        <label>Event Title</label>\n                        <Input placeholder=\"\" onChange = {this.updateTitle}/>\n                    </Form.Field>\n                    <Form.Field>\n                        <label>Organizing Parties</label>\n                        <Input placeholder = \"\" onChange = {this.updateOrganizer}/>\n                    </Form.Field>\n                    <Form.Field>\n                        <label>Events Date Range</label>\n                            <div className=\"two fields\">\n                                <Form.Field>\n                                    <label>From:</label>\n                                      <DatePicker\n                                        selected={this.state.dateFrom}\n                                        onChange={this.updateDateFrom}\n                                        inline\n                                        showTimeSelect\n                                        timeFormat=\"HH:mm\"\n                                        timeIntervals={30}\n                                        dateFormat=\"MMMM d, yyyy h:mm aa\"\n                                        timeCaption=\"time\"\n                                    />\n                                </Form.Field>\n                                <Form.Field>\n                                    <label>To:</label>\n                                      <DatePicker\n                                        selected={this.state.dateEnd}\n                                        onChange={this.updateDateEnd}\n                                        inline\n                                        showTimeSelect\n                                        timeFormat=\"HH:mm\"\n                                        timeIntervals={30}\n                                        dateFormat=\"MMMM d, yyyy h:mm aa\"\n                                        timeCaption=\"time\"\n                                    />\n                                </Form.Field>\n                            </div>\n                    </Form.Field>\n                    <Form.Field>\n                        <label>Event tags</label>\n                          <Dropdown\n                            options={this.state.options}\n                            placeholder='Select Tags'\n                            search\n                            selection\n                            fluid\n                            multiple\n                            allowAdditions\n                            value={currentValues}\n                            onAddItem={this.handleAddition}\n                            onChange={this.updateTags}\n                          />\n                    </Form.Field>\n                    <Button color = 'yellow' type = 'submit' onClick = {this.postSearch}>Search</Button>\n                    <Button color = 'yellow' type = 'submit' onClick = {this.feelLucky}>I'm Feeling Lucky</Button>\n                </Form>\n            </div>\n\n          );\n    }else{\n        var eventComponents = this.state.events.map((e) => {\n          return (\n          <tr className=\"event\" key={e._id}>\n            <td className=\"event_title\">{e.title}</td>\n            <td className=\"event_creator\">{e.creator}</td>\n            <td className=\"event_date\">{e.date}</td>\n            <td className=\"event_address\">{e.address}</td>\n            <td className=\"event_tags\">{e.tags}</td>\n          </tr>);\n        });\n        return(\n            <div className = \"searchevent_body\">\n                <table>\n                  <thead>\n                    <tr>\n                      <th>Title</th>\n                      <th>Creator</th>\n                      <th>Date</th>\n                      <th>Address</th>\n                      <th>Tags</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {eventComponents}\n                  </tbody>\n                </table>\n                <Link to='/findevent' onClick = {this.resetSearch}>Re-Search Events</Link>\n            </div>\n        )\n    }\n}\n\n}\n\nexport default Searchbox;\n","import React, { Component } from 'react';\nimport Searchbox from '../SearchEvent/Searchbox';\nimport NavigationBar from '../Constant/NavigationBar';\nimport Footer from '../Constant/Footer';\n\nclass PostEvent extends Component {\n    state = {  }\n    render() { \n        return ( \n            <div>\n                <NavigationBar/>\n                <Searchbox/>\n                <Footer />\n            </div>\n         );\n    }\n}\n \nexport default PostEvent;","import React, { Component } from 'react';\nimport 'semantic-ui-css/semantic.min.css';\nimport '../../Styles/Searchbox.css';\nimport {Link} from 'react-router-dom'\nimport {Image, Form, Input, Button, Dropdown, Card} from 'semantic-ui-react';\nimport DatePicker from 'react-datepicker';\nimport axios from 'axios';\nimport '../../Styles/EventList.css'\n\nimport img1 from './../../images/Default-Group.jpg'\n\n\nfunction isEmpty(obj) {\n    for(var key in obj) {\n        if(obj.hasOwnProperty(key))\n            return false;\n    }\n    return true;\n}\n\nclass EventList extends Component {\n  constructor(){\n      super();\n\n      this.state = {\n        results: []\n      }\n  }\n\n\n  /*\n    componentWillMount() {\n      if (this.state.results != []) {\n        var events = []\n        let promises =['5cc4bf7296e2cc098a1c440a','5cc4bf7296e2cc098a1c440c'].map((movie, idx) => {\n          var result;\n          axios.get(`http://localhost:4000/api/events/${movie}`)\n            .then(res => {\n              result = res.data.data\n              events.push(result)\n            })\n            .catch(err => {\n              console.log(err.response)\n            })\n\n        })\n        Promise.all(promises).then(() => {\n          this.setState({\n            results: events\n          })\n        })\n      }\n\n    }\n    */\n\n    render() {\n      //console.log(this.props.e)\n      if (isEmpty(this.props)) {\n        return (\n          <div>\n            You have no events!\n          </div>\n        );\n      }\n      else {\n        //console.log(this.props.e)\n\n        /*\n        console.log(this.state.results)\n        const EventBlock = this.state.results.map((result, idx) => {\n          console.log(result)\n            return (\n              <Card>\n                <Image src = 'https://data.whicdn.com/images/293514924/superthumb.jpg?t=1501609884' />\n                <Card.Content>\n                    <Card.Header> {result.title} </Card.Header>\n                    <Card.Meta> {result.creator} </Card.Meta>\n                    <Card.Meta> {result.date} </Card.Meta>\n                    <Card.Description> {result.date} </Card.Description>\n                </Card.Content>\n                <Card.Content>\n                  <div className = \"test\">\n                  {result.address}\n                  </div> <br />\n                  <Card.Meta> {result.tags} </Card.Meta>\n                </Card.Content>\n              </Card>\n            );\n\n\n\n        })*/\n        console.log(this.state.results)\n        return (\n          <div className = \"events\">\n          <Card>\n            <Image src = 'https://upload.wikimedia.org/wikipedia/commons/7/7c/Illinois_Block_I.png' />\n            <Card.Content>\n                <Card.Header> Event Title </Card.Header>\n                <Card.Meta> Organizer </Card.Meta>\n                <Card.Meta> Date </Card.Meta>\n                <Card.Description>\n                  <div className = \"test\">\n                    Explanation about the event should be a bit long yada yada yada yada\n                  </div>\n                </Card.Description>\n            </Card.Content>\n            <Card.Content>\n              <div className = \"test\">\n                Address of event\n              </div> <br />\n              <Card.Meta> List of tags for event </Card.Meta>\n            </Card.Content>\n          </Card>\n          </div>\n        )\n      }\n\n    }\n  }\n\n  export default EventList\n","import React, { Component } from 'react';\nimport 'semantic-ui-css/semantic.min.css';\nimport '../../Styles/Searchbox.css';\nimport {Link} from 'react-router-dom'\nimport {Image, Form, Input, Button, Dropdown, Card} from 'semantic-ui-react';\nimport DatePicker from 'react-datepicker';\nimport axios from 'axios';\nimport '../../Styles/EventList.css'\n\nimport EventList from '../SearchEvent/EventList'\n\nimport img1 from './../../images/Default-Group.jpg'\n\n\nclass Profile extends Component {\n    constructor(){\n        super();\n\n        this.state = {\n          results: []\n        }\n        /*\n        var events = []\n        let promises = ['5cc4bf7296e2cc098a1c440a','5cc4bf7296e2cc098a1c440c'].map((movie, idx) => {\n          var result;\n          axios.get(`http://localhost:4000/api/events/${movie}`)\n            .then(res => {\n              result = res.data.data\n              events.push(result)\n            })\n            .catch(err => {\n              console.log(err.response)\n            })\n\n        })\n        */\n\n    }\n\n    render() {\n      /*\n      this.state.results.map((movie, idx) => {\n        console.log(movie)\n      })*/\n        return (\n          <div>\n            <EventList e/>\n          </div>\n        )\n    }\n  }\n\n  export default Profile\n","import React, { Component } from 'react';\n\nimport Footer from '../Constant/Footer';\nimport NavigationBar from '../Constant/NavigationBar';\nimport Profile from '../Users/Profile'\n\n\nclass MyProfile extends Component {\n    state = {  }\n    render() {\n        return (\n            <div className = \"myprofile_body\">\n                <NavigationBar />\n                <Profile />\n                <Footer/>\n            </div>\n         );\n    }\n}\n\nexport default MyProfile;\n","import React, { Component } from 'react';\nimport {Form, Input, Button} from 'semantic-ui-react';\nimport 'semantic-ui-css/semantic.min.css';\nimport '../../Styles/Signupform.css'\nimport {Link} from 'react-router-dom'\nimport axios from 'axios';\n\nclass SignupForm extends Component {\n    constructor(){\n        super()\n\n        this.state = {\n            firstName:\"\",\n            lastName:\"\",\n            email:\"\",\n            password:\"\",\n            confirmPassword:\"\",\n            securityQuestion:\"\",\n            securityQuestionAnswer:\"\",\n            profilePic:-1,\n            posted:false,\n            successPosted:false\n        };\n\n        this.updateFirstName = this.updateFirstName.bind(this)\n        this.updateLastName = this.updateLastName.bind(this)\n        this.updateEmail = this.updateEmail.bind(this)\n        this.updatePassword = this.updatePassword.bind(this)\n        this.updateConfirmPassword = this.updateConfirmPassword.bind(this)\n        this.updateSecurityQuestion = this.updateSecurityQuestion.bind(this)\n        this.updateSecurityQuestionAnswer = this.updateSecurityQuestionAnswer.bind(this)\n        this.updateProfilePic  = this.updateProfilePic.bind(this)\n        this.postSignup = this.postSignup.bind(this)\n    }\n\n    resetSignup(event){\n        this.setState({\n            firstName:\"\",\n            lastName:\"\",\n            email:\"\",\n            password:\"\",\n            confirmPassword:\"\",\n            securityQuestion:\"\",\n            securityQuestionAnswer:\"\",\n            profilePic:-1,\n            posted:false,\n            successPosted:false\n        })\n    }\n    updateSecurityQuestionAnswer(event){\n        console.log(event.target.value)\n        this.setState({\n            securityQuestionAnswer:event.target.value\n        })\n    }\n\n    updateSecurityQuestion(event){\n        if(!event.target.classList.contains(\"active\")){\n            console.log(\"Select:\",event.target.value);\n            var prevValue = this.state.securityQuestion;\n            event.target.classList.add(\"active\");\n            this.setState({securityQuestion: event.target.value}, function () {\n                console.log(\"securityQuestion updated\");\n            });\n            var questionButtons = document.getElementById(\"questions\").childNodes;\n            for (var i in questionButtons){\n                if(questionButtons[i].value == prevValue){\n                    questionButtons[i].classList.remove(\"active\");         //unselect the previous button\n                    console.log(\"removed: \", prevValue);\n                    break;\n                }\n            }\n        }\n    }\n\n    updateConfirmPassword(event){\n        console.log(event.target.value)\n        this.setState({\n            confirmPassword:event.target.value\n        })\n    }\n\n    updatePassword(event){\n        console.log(event.target.value)\n        this.setState({\n            password:event.target.value\n        })\n    }\n\n    updateLastName(event){\n        console.log(event.target.value)\n        this.setState({\n            lastName:event.target.value\n        })\n    }\n\n    updateFirstName(event){\n        console.log(event.target.value)\n        this.setState({\n            firstName:event.target.value\n        })\n    }\n\n    updateProfilePic(event){\n        console.log(event.target.id)\n        this.setState({\n            profilePic:event.target.id\n        })\n    }\n\n    updateEmail(event){\n        console.log(event.target.value)\n        this.setState({\n            email:event.target.value\n        })\n    }\n\n    postSignup(event){\n        console.log(this.state.firstName)\n        console.log(this.state.lastName)\n        console.log(this.state.email)\n        console.log(this.state.password)\n        console.log(this.state.confirmPassword)\n        console.log(this.state.securityQuestion)\n        console.log(this.state.securityQuestionAnswer)\n        console.log(this.state.profilePic)\n\n        var new_user = {\n          createdevents: [],\n          savedevents: [],\n          name: this.state.firstName + \" \" + this.state.lastName,\n          email: this.state.email,\n          password: this.state.password,\n          securityquestion: this.state.securityQuestion,\n          securityanswer: this.state.securityQuestionAnswer\n        }\n\n        axios.post('http://localhost:4000/api/users', new_user)\n          .then(res => {\n            console.log(res.data)\n            this.setState({\n                posted:true,\n                successPosted:true\n            })\n          })\n          .catch(err => {\n            console.log(err.response)\n            this.setState({\n                posted:true,\n                successPosted:false\n            })\n          })\n    }\n\n    render() {\n        if(this.state.posted === false){\n        return (\n            <div className = \"signupform_body\">\n                <h1>Sign up! </h1>\n                <Form>\n                    <Form.Field required>\n                        <label>First Name</label>\n                        <Input placeholder = \"\" onChange = {this.updateFirstName}/>\n                    </Form.Field>\n                    <Form.Field required>\n                        <label>Last Name</label>\n                        <Input placeholder = \"\" onChange = {this.updateLastName}/>\n                    </Form.Field>\n                    <Form.Field required>\n                        <label>Email</label>\n                        <Input placeholder = \"\" onChange = {this.updateEmail}/>\n                    </Form.Field>\n                    <Form.Field required>\n                        <label>Password</label>\n                        <Input placeholder = \"\" onChange = {this.updatePassword}/>\n                    </Form.Field>\n                    <Form.Field required>\n                        <label>Confirm password</label>\n                        <Input placeholder = \"\" onChange = {this.updateConfirmPassword}/>\n                    </Form.Field>\n                    <Form.Field required>\n                        <label>Security Question</label>\n                            <Button.Group id = \"questions\">\n                                <Button id  = \"birthplace\" value = \"What city were you born in?\" onClick = {this.updateSecurityQuestion}>\"What city were you born in?\"</Button>\n                                <Button id  = \"favcolor\" value = \"What is your favorite color?\" onClick = {this.updateSecurityQuestion}>\"What is your favorite color?\"</Button>\n                                <Button id  = \"petname\" value = \"What is the name of your first pet?\" onClick = {this.updateSecurityQuestion}>\"What is the name of your first pet?\"</Button>\n                                <Button id  = \"vacationspot\" value = \"Where is your dream vacation located?\" onClick = {this.updateSecurityQuestion}>\"Where is your dream vacation located?\"</Button>\n                            </Button.Group>\n                    </Form.Field>\n                    <Form.Field required>\n                        <label>Security Question Answer</label>\n                        <Input placeholder = \"\" onChange = {this.updateSecurityQuestionAnswer}/>\n                    </Form.Field>\n                    <Form.Field>\n                        <label> Profile Pic</label>\n                        <Button.Group>\n                            <Button id = \"female\" value = \"Female\" onClick = {this.updateProfilePic}>Female</Button>\n                            <Button id=\"male\" value = \"Male\" onClick = {this.updateProfilePic}>Male</Button>\n                            <Button id = \"neutural\" value = \"Neutural\" onClick = {this.updateProfilePic}>Neutural</Button>\n                        </Button.Group>\n                    </Form.Field>\n                    <Button type = 'submit' color = 'yellow' onClick = {this.postSignup}> Create</Button>\n                </Form>\n            </div>\n         );\n        }else{\n            if(this.state.successPosted === false){\n                return(\n                    <div className = \"signupform_response_body\">\n                        <h1>Failed to Signup </h1>\n                        <h3>Please make sure to fill in all required information before proceed</h3>\n                        <Link to='/signup' onClick = {this.resetSignup}>\n                            Back To Signup Again.\n                        </Link>\n                    </div>\n                )\n            }else{\n                return(\n                    <div className = \"signupform_response_body\">\n                        <h1> Successfully Signup! </h1>\n                        <h3> Welcome Abroad!</h3>\n                        <Link to='/'>\n                            Back To Home To Explore!\n                        </Link>\n                    </div>\n                )\n            }\n        }\n    }\n}\n\nexport default SignupForm;\n","import React, { Component } from 'react';\n\nimport SignupForm from '../Users/SignupForm';\nimport NavigationBar from '../Constant/NavigationBar';\nimport Footer from '../Constant/Footer';\n\n\nclass Signup extends Component {\n    state = {  }\n    render() { \n        return ( \n            <div>\n                <NavigationBar />\n                <SignupForm />\n                <Footer />\n            </div>\n         );\n    }\n}\n \nexport default Signup;","import React,{Component} from 'react';\n//import 'semantic-ui-css/semantic.min.css';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport Home from '../Components/Routes/Home'\nimport Login from '../Components/Routes/Login'\nimport PostEvent from '../Components/Routes/PostEvent'\nimport SearchEvent from '../Components/Routes/SearchEvent';\nimport MyProfile from '../Components/Routes/MyProfile';\nimport Signup from '../Components/Routes/Signup';\nimport '../Styles/App.css'\n\nclass App extends Component {\n  render(){\n    return (\n      <Router>\n        <Switch>\n          <Route exact path = '/' component = {Home}/>\n          <Route exact path = '/postevent' component = {PostEvent}/>\n          <Route exact path = '/findevent' component = {SearchEvent}/>\n          <Route exact path = '/login' component = {Login} />\n          <Route exact path = '/signup' component = {Signup} />\n          <Route exact path = '/myprofile' component = {MyProfile}/>\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom'\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();","module.exports = __webpack_public_path__ + \"static/media/Default-Group.e246bead.jpg\";"],"sourceRoot":""}